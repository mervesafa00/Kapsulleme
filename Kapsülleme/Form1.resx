<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +CSSCUkkkg//2Q==
</value>
  </data>
</root>